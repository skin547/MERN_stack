{"version":3,"sources":["components/Todo.js","components/LoadingIcon.js","components/TodoList.js","components/ShortUrl.js","components/ShortUrlList.js","components/Image.js","components/UploadImageForm.js","components/ImageList.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Todo","todo","update","className","style","content","type","class","aria-label","onClick","url","_id","fetch","method","then","res","console","log","aria-hidden","LoadingIcon","id","animation","width","height","viewBox","fill","xmlns","fill-rule","d","for","TodoList","useState","setTodo","todos","setTodos","isLoading","setIsLoading","isFail","setIsFail","FetchData","json","catch","error","useEffect","onChange","event","target","value","required","headers","body","JSON","stringify","err","document","getElementById","map","key","ShortUrl","href","shortId","alert","cx","cy","r","UrlList","shortUrl","setShortUrl","urls","setUrls","placeholder","text","Image","imgUrl","src","setSrc","loading","alt","UploadButton","UploadImageForm","setImgUrl","file","setFile","name","accept","reader","FileReader","files","readAsDataURL","onloadend","e","result","data","FormData","append","ImageList","images","setImages","image","Navbar","App","ShortUrlList","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8b4b01d2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Todo = ({todo, update}) =>{\n    \n    const removeTodo = () => {\n        let url = '/api/todos/' + todo._id;\n        fetch(url, {method:'delete'})\n        .then( res => console.log(res))\n        .then( () => update() );\n    }\n\n    return (\n        <div className='row shadow p-3 mb-3 rounded'>\n        \n            <div className = 'col-9' style = { { \"fontSize\" : \"16pt\" } } >\n                {todo.content}\n            </div>\n\n            <div className='col'>\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" onClick={removeTodo}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n\n            </div>\n\n        </div>\n    )\n}\n\n\nexport default Todo;","import React, {useState, useEffect} from 'react';\n\nconst LoadingIcon = () => {\n\tconst spinStyle = {\n\t\tanimation: 'loading-spin 1s linear infinite'\n\t}\n\n\treturn(\n\t\t<div>\n\t\t\t<svg id='icon' style={spinStyle} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-arrow-clockwise\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<path fill-rule=\"evenodd\" d=\"M3.17 6.706a5 5 0 0 1 7.103-3.16.5.5 0 1 0 .454-.892A6 6 0 1 0 13.455 5.5a.5.5 0 0 0-.91.417 5 5 0 1 1-9.375.789z\"/>\n\t\t\t\t<path fill-rule=\"evenodd\" d=\"M8.147.146a.5.5 0 0 1 .707 0l2.5 2.5a.5.5 0 0 1 0 .708l-2.5 2.5a.5.5 0 1 1-.707-.708L10.293 3 8.147.854a.5.5 0 0 1 0-.708z\"/>\n\t\t\t</svg>\n\t\t\t<label for='icon'>\n\t\t\t\tloading...\n\t\t\t</label>\n\t\t</div>\n\t)\n}\n\nexport default LoadingIcon;","import React, {useState, useEffect} from 'react';\nimport Todo from './Todo.js';\nimport LoadingIcon from './LoadingIcon';\n\nconst TodoList = () =>{\n\tconst [todo,setTodo] = useState('');\n    const [todos,setTodos] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isFail,setIsFail] = useState(false);\n  \n\n\tconst createTodo = () => {\n\t\tconsole.log(todo);\n\t\n\t\tfetch('api/todos/',\n\t\t  {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({\n\t\t\t\t\"content\": todo\n\t\t\t})\n\t\t  })\n\t\t  .then(res => console.log(res))\n\t\t  .then( () => FetchData() )\n\t\t  .catch(err => console.log(err));\n\t\n\t\tdocument.getElementById('input_todo').value = \"\";\n\t  }\n\n    const FetchData = () => {\n      fetch(\"api/todos\")\n            .then(res => res.json())\n            .then(res => { \n              setTodos(res);\n              setIsLoading(false);\n            })\n            .catch( error => {\n              console.log(error);\n              setIsLoading(false);\n              setIsFail(true);\n              });\n\t}\n\t\n\tconst handleInputChange = (event) => {\n\t\tsetTodo(event.target.value);\n\t  }\n\t\t\n  \n    useEffect(() => {\n      FetchData();\n    },[])\n    \n    return (\n        <div className='container'>\n\n\t\t\t<h3>Todo-List</h3>\n\n\t\t\t<div className='row '>\n\t\t\t\t<input className='form-control col-9' type='text' id='input_todo' onChange={handleInputChange} required></input>\n\t\t\t\t<button className='btn btn-primary col ml-1' onClick={createTodo} >add</button>\n\t\t\t</div>\n\n        \t<hr/>\n\n\t\t\t<div>\n\t\t\t\t{ isLoading ? <LoadingIcon/> :  todos.map( (todo) => <Todo key = {todo._id} todo = {todo} update={FetchData}/> ) }\n\t\t\t\t{ isFail && <p> Some error occur when connecting to server!</p> }\n\t\t\t</div>\n\t\t\t\n        </div>\n    )\n}\n\nexport default TodoList;","import React from 'react';\n\nconst ShortUrl = ({url, update}) =>{\n\n    const removeUrl = () => {\n        fetch(\"api/urls/\"+url._id, {\n            method:\"delete\"\n        })\n        .then( res => console.log(res) )\n        .then( () => update() )\n        .catch( err => console.log(err) );\n    }\n    \n    const showUrlItem = () => {\n        alert( url.url );\n    }\n\n    return (\n        <div className='row shadow p-3 mb-3 rounded'>\n        \n            <div className='col-8' style = { { \"fontSize\" : \"16pt\" } } >\n                <a href={\"http://localhost:8000/api/urls/\"+url.shortId}>{\"urls/\"+url.shortId}</a>\n            </div>\n\n            <button type=\"button\" class=\"close col\" aria-label=\"info\" onClick={showUrlItem}>\n                <svg width=\".75em\" height=\".75em\" viewBox=\"0 0 16 16\" class=\"bi bi-info-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n                    <path d=\"M8.93 6.588l-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588z\"/>\n                    <circle cx=\"8\" cy=\"4.5\" r=\"1\"/>\n                </svg>\n            </button>\n\n            <button type=\"button\" class=\"close col\" aria-label=\"Close\" onClick={removeUrl}>\n                    <span aria-hidden=\"true\">&times;</span>\n            </button>\n            \n        </div>\n    )\n}\n\nexport default ShortUrl;","import React, { useState, useEffect } from 'react';\nimport ShortUrl from './ShortUrl.js';\nimport LoadingIcon from './LoadingIcon';\n\nconst UrlList = () => {\n\tconst [shortUrl, setShortUrl] = useState(\"\");\n\tconst [urls, setUrls] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst [isFail, setIsFail] = useState(false);\n\n\tconst shortenUrl = () => {\n\t\tconsole.log(shortUrl);\n\n\t\tfetch('api/urls/',{\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify( {\n\t\t\t\t\"url\": shortUrl\n\t\t\t\t} )\n\t\t})\n\t\t.then(res => res.text() )\n\t\t.then( text => alert(text) )\n\t\t.then( () => FetchData() )\n\t\t.catch( err => alert(err) );\n\n\t\tdocument.getElementById('input_url').value = \"\";\n\t}\n\n\tconst FetchData = () => {\n\t\tfetch(\"api/urls\")\n\t\t.then(res => res.json())\n\t\t.then(res => {\n\t\t\tsetUrls(res);\n\t\t\tsetIsLoading(false);\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log(error);\n\t\t\tsetIsLoading(false);\n\t\t\tsetIsFail(true);\n\t\t});\n\t}\n\n\tconst handleInputChange = (event) => {\n\t\tsetShortUrl(event.target.value);\n\t}\n\n\tuseEffect(() => {\n\t\tFetchData();\n\t}, [])\n\n  \treturn (\n\t\t<div className='container'>\n\t\t\t<h3>Short URL</h3>\n\n\t\t\t<div className='row'>\n\t\t\t\t<input className='form-control col-9' type='text' id='input_url' onChange={handleInputChange} placeholder=\"Shorten Your Link!\" required></input>\n\t\t\t\t<button className='btn btn-primary col ml-1' onClick={shortenUrl}>Shorten</button>\n\t\t\t</div>\n\n\t\t\t<hr/>\n\t\t\t<div>\n\t\t\t\t{isLoading ? <LoadingIcon/> : urls.map( (url) => <ShortUrl key={url._id} url={url} update={FetchData}/>) }\n\t\t\t\t{isFail && <p> Some error occur when connecting to server!</p>}\n\t\t\t</div>\n\n\t\t</div>\n  \t)\n}\n\nexport default UrlList;","import React, { useState, useEffect } from 'react';\n\nconst Image = ({imgUrl, update}) => {\n    const [src, setSrc] = useState();\n\n    useEffect( () => {\n        setSrc( \"api/images/\" + imgUrl );\n        update();\n    }, []);\n    \n    return(\n        <div>\n            <img src={ src } loading=\"lazy\" class=\"img-thumbnail\" alt=\"Responsive\" />\n            <hr/>\n        </div>\n    )\n}\n\nexport default Image;\n","import React, {useState} from 'react';\n\nconst UploadButton = ({onClick}) => {\n\treturn(\n\t\t<button className='btn btn-outline-primary'>\n\t\t\t<svg width=\"2em\" height=\"1.5em\" viewBox=\"0 0 16 16\" class=\"bi bi-cloud-upload\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" onClick={onClick}>\n\t\t\t\t<path fill-rule=\"evenodd\" d=\"M4.406 1.342A5.53 5.53 0 0 1 8 0c2.69 0 4.923 2 5.166 4.579C14.758 4.804 16 6.137 16 7.773 16 9.569 14.502 11 12.687 11H10a.5.5 0 0 1 0-1h2.688C13.979 10 15 8.988 15 7.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 2.825 10.328 1 8 1a4.53 4.53 0 0 0-2.941 1.1c-.757.652-1.153 1.438-1.153 2.055v.448l-.445.049C2.064 4.805 1 5.952 1 7.318 1 8.785 2.23 10 3.781 10H6a.5.5 0 0 1 0 1H3.781C1.708 11 0 9.366 0 7.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383z\"/>\n\t\t\t\t<path fill-rule=\"evenodd\" d=\"M7.646 4.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V14.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3z\"/>\n\t\t\t</svg>\n\t\t</button>\n\t)\n}\n\nconst UploadImageForm = ( {update} ) => {\n\tconst [imgUrl,setImgUrl] = useState();\n\tconst [file, setFile] = useState(null);\n\n\tconst handleChange = (event) => {\n\t\ttry {\n\t\t\tconst reader = new FileReader();\n\t\t\tsetFile(event.target.files[0]);\n\t\t\treader.readAsDataURL(event.target.files[0]);\n\t\t\treader.onloadend = function (e) {\n\t\t\t\tsetImgUrl(reader.result);\n\t\t\t};\n\t\t} catch( error ) {\n\t\t\talert(\"your need to select image to upload\");\n\t\t}\n\t}\n\n\tconst uploadImageFormData = () => {\n\t\tconst data = new FormData();\n\t\tdata.append('file', file);\n\t\tlet options = {\n\t\t\tmethod : \"POST\",\n\t\t\tbody   : data\n\t\t} ;\n\n\t\tfetch( \"api/images\", options )\n\t\t.then( () => alert(\"Upload file successful\") )\n\t\t.then( () => update() )\n\t\t.catch( err => console.log(err) );\n\t}\n  \n    return (\n\t\t<div className='container'>\n\t\t\t<h2> Images List</h2>\n\t\t\t<div className='row'>\n\t\t\t\t<input className='form-control-file col-9' type=\"file\" id=\"img\" name=\"img\" accept=\"image/*\" onChange={handleChange}/>\n\n\t\t\t\t<UploadButton onClick={uploadImageFormData} />\n\t\t\t</div>\n\t\t\t<hr/>\n\t\t\t{ imgUrl && <img src={imgUrl} class=\"img-fluid\" alt=\"Preview\"/> }\n\n\t\t</div>\n    )\n}\n\nexport default UploadImageForm;","import React, { useState, useEffect } from 'react';\nimport Image from './Image.js';\nimport LoadingIcon from './LoadingIcon';\nimport UploadImageForm from './UploadImageForm';\n\nconst ImageList = () => {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isFail, setIsFail] = useState(false);\n\n  const FetchData = () => {\n    fetch(\"api/images\")\n      .then( res => res.json() )\n      .then( res => {\n        setImages( res );\n        console.log( res[1] );\n        setIsLoading( false );\n      } )\n      .catch( error => {\n        console.log( error );\n        setIsLoading( false );\n        setIsFail( true );\n      } ) ;\n  }\n\n  useEffect(() => {\n    FetchData();\n  }, [])\n\n  return (\n    <div>\n      <UploadImageForm update={FetchData} />\n      {isLoading ? <LoadingIcon/> : images.map((image) => <Image key={image._id} imgUrl={image.shortId} update={FetchData}/>)}\n      {isFail && <p> something wrong when connecting to server!</p>}\n\n    </div>\n  )\n}\n\nexport default ImageList;","import React from 'react';\n\nconst Navbar = () => {\n    return(\n\t\t<nav class=\"navbar sticky-top navbar-dark bg-dark p-2 mb-4 shadow\">\n\n            <div class='container'>\n\n                <a class=\"nav navbar-brand\" href=\"/\">\n                    MERN stack\n                </a>\n\n                <div class='nav-item'>\n\n                    <button className='btn btn-outline-light mx-1'>\n                        Login\n                    </button>\n                    \n                    <button className='btn btn-light '>\n                        Sign Up!\n                    </button>\n\n                </div>\n\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport './App.css';\nimport TodoList from \"./components/TodoList\";\nimport ShortUrlList from \"./components/ShortUrlList\";\nimport ImageList from './components/ImageList';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n\t\t<Navbar/>\n\t\t<div className='container'>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-md'>\n\t\t\t\t\t<TodoList/>\n\t\t\t\t</div>\n\t\t\t\t<div className='col-md'>\n\t\t\t\t\t<ShortUrlList/>\n\t\t\t\t</div>\n\t\t\t\t<div className='col-md'>\n\t\t\t\t\t<ImageList/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}